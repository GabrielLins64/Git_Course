Algumas dicas de comandos git com conceitos menos básicos:

~~~~~~~~~~~~~~~~~ X ~~~~~~~~~~~~~~~~~ X ~~~~~~~~~~~~~~~~~ X
Comandos para controle de dano:

git commit --amend # permite "re"commitar o último commit (útil para modificar mensagens de commit erradas)
git reset --soft HEAD~2 # Remove os 2 últimos commits (a partir de HEAD), voltando os arquivos para o estado de staged, sem perdê-los. O 2 pode ser qualquer outro número.
git reset --mixed HEAD~3 # Remove os 3 últimos commits, mantendo os arquivos, mas voltando-os para estágio de Untracked ou Modified.
git reset --hard HEAD~1 # Remove o último commit, perdendo todas as mudanças "commitadas" (incluindo os arquivos adicionados ou modificados).
git reset -- NOMEARQUIVO # Remove o NOMEARQUIVO do estado STAGED, útil quando se adiciona muitos arquivos com add, e precisa tirar alguns.
git add -i # Abre um menu interativo para várias funcionalidades de add e remoção de stageds (pode fazer o comando acima com vários arquivos facilmente, utilizando a função "revert")
git add -p # Dá opções de dividir as modificações em "hunks", permitindo commits separados para diferentes modificações num mesmo arquivo

~~~~~~~~~~~~~~~~~ X ~~~~~~~~~~~~~~~~~ X ~~~~~~~~~~~~~~~~~ X
Dicas e boas práticas:

*Evite utilizar add . para commitar vários arquivos ou mudanças de uma vez. Cada adição/modif. deve ter seu próprio commit, por questão de organização no log

